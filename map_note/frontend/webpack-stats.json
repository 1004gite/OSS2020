{"status":"done","publicPath":"http://localhost:8080/dist/","chunks":{"main":[{"name":"build.js","publicPath":"http://localhost:8080/dist/build.js","path":"/Users/zigje9/Desktop/djangovue/frontend/dist/build.js"},{"name":"main.afbf22a430ce502f7109.hot-update.js","publicPath":"http://localhost:8080/dist/main.afbf22a430ce502f7109.hot-update.js","path":"/Users/zigje9/Desktop/djangovue/frontend/dist/main.afbf22a430ce502f7109.hot-update.js"}]},"error":"ModuleError","message":"Module Error (from ./node_modules/vue-loader/lib/template-compiler/index.js):\n(Emitted value instead of an instance of Error) \n  Error compiling template:\n  \n    <div id=\"app\">\n      {{msg}}\n      <form @submit.prevent=\"submitNote\">\n        <label>Title</label>\n        <input type=\"text\" v-model=\"formData.title\"/>\n        <label>Content</label>\n        <textarea v-model=\"formData.content\"></textarea>\n  \n        <br/>\n        <button type=\"submit\">Submit</button>\n      </form>\n  \n      <br/>\n      <h1>All notes</h1>\n      <ul>\n        <li v-for=\"(note, index) in notes\" :key=\"index\">\n          <h3>{{note.title}}</h3>\n          <h5>Created on {{note.created}}</h5>\n          <p>{{note.content}}</p>\n        </li>\n      </ul>\n    </div>\n  \n  \n  \n  <script>\n  import api from './api/index'\n  export default {\n    name: 'app',\n    data () {\n      return {\n        msg: '',\n        formData: {\n          title: '',\n          content: ''\n        },\n        notes: []\n      }\n    },\n    methods: {\n      submitNote () {\n        api.fetchNotes('post', null, this.formData).then(res => {\n          this.msg = 'Saved'\n        }).catch((e) => {\n          this.msg = e.response\n        })\n      },\n      fetchAllNotes () {\n        api.fetchNotes('get', null, null).then(res => {\n          this.notes = res.data\n          // check log data\n          console.log(this.notes)\n        }).catch((e) => {\n          console.log(e)\n        })\n      }\n    },\n    mounted () {\n      // fetch all notes once component is mounted\n      this.fetchAllNotes()\n    }\n  }\n  </script>\n  \n  <style lang=\"scss\">\n  #app {\n    font-family: 'Avenir', Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-align: center;\n    color: #2c3e50;\n    max-width: 500px;\n    margin: 0 auto;\n    text-align: left;\n  }\n  \n  h1, h2 {\n    font-weight: normal;\n  }\n  \n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  \n  li {\n    display: inline-block;\n    margin: 0 10px;\n  }\n  \n  a {\n    color: #42b983;\n  }\n    input, textarea{\n      width: 100%;\n      display: block;\n      padding: 6px 10px;\n      border: 1px solid #ddd;\n      border-radius: 4px;\n    }\n  \n    label{\n      margin-top: 15px;\n    }\n  \n    button{\n      background: #000;\n      color: #fff;\n      border-radius: 3px;\n      padding: 6px 10px;\n    }\n  </style>\n  \n  \n    <div id=\"app\">\n      <div id=\"map\"></div>\n    </div>\n  \n  \n  <script>\n  export default {\n      mounted() {\n          if (window.kakao && window.kakao.maps) {\n              this.initMap();\n          } else {\n              const script = document.createElement('script');\n              /* global kakao */\n              script.onload = () => kakao.maps.load(this.initMap);\n              script.src = 'http://dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=56fc0181971e9127b10cb8d08b77364e';\n              document.head.appendChild(script);\n          }\n      },\n      methods: {\n          initMap() {\n              var container = document.getElementById('map');\n              var options = {\n                center: new kakao.maps.LatLng(33.450701, 126.570667),\n                level: 3\n              };\n  \n              var map = new kakao.maps.Map(container, options);\n              map.setMapTypeId(kakao.maps.MapTypeId.HYBRID);\n          }\n      }\n  }\n  </script>\n  \n  <style>\n  #map {\n      width: 400px;\n      height: 300px;\n  }\n  </style>\n  \n  - Templates should only be responsible for mapping the state to the UI. Avoid placing tags with side-effects in your templates, such as <script>, as they will not be parsed.\n  - Component template should contain exactly one root element. If you are using v-if on multiple elements, use v-else-if to chain them instead.\n  - Templates should only be responsible for mapping the state to the UI. Avoid placing tags with side-effects in your templates, such as <style>, as they will not be parsed.\n  - Templates should only be responsible for mapping the state to the UI. Avoid placing tags with side-effects in your templates, such as <script>, as they will not be parsed.\n  - Templates should only be responsible for mapping the state to the UI. Avoid placing tags with side-effects in your templates, such as <style>, as they will not be parsed.\n"}